# -*- coding: utf-8 -*-
"""proce_Ultrasonido.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DCsnZ5NvcXFge3sdO7wJKHsmoWiQI0mP
"""

import numpy as np
import matplotlib.pyplot as plt

image_width=100
imagen_height=100

#generar datos simulados
np.random.seed(42)
ultrasound_image=np.random.poisson(lam=10,size=(imagen_height, image_width))

#a√±adir una figura simulada
x,y=np.meshgrid(np.linspace(-1,1, image_width),np.linspace(-1,1,imagen_height))
circle=np.sqrt(x**2+y**2)<0.3
ultrasound_image[circle]+=20
ultrasound_image[40:60,30:70]+=15

#normalizar valores
ultrasound_image=np.clip(ultrasound_image,0,255)
ultrasound_image=ultrasound_image/255

#visualizar imagen
plt.figure(figsize=(8,8))
plt.imshow(ultrasound_image,cmap='gray', extent=[0,10,0,10])
plt.colorbar(label="intensidad de los ecos")
plt.title("simulacion del modo B")
plt.xlabel("distancia lateral en cm")
plt.ylabel("profundidad cm")
plt.show()

#impedancia acustica (Z) y coeficiente de reflexion (R)
#definir la spropiedades acusticas
tejidos=["Aire", "Grasa","Musculo","Hueso"]
densidades=[0.0012, 0.9, 1.06, 1.85] #densidad es en g/cm3
velocidades= [330, 1450, 1580, 4080]

#impedancia acustica
impedancia=np.array(densidades)*np.array(velocidades) #z=p*c

for t, z in zip(tejidos, impedancia):
  print(f"tejido:{t}, Imedancia acustica:{z:2f} Rayls")

#calcualr el coeficiente de refrexion
def coeficiente_reflexion(z1,z2):
  return ((z1-z2)/(z1+z2))**2

from typing import ParamSpecArgs
#reaflexion en pares de tejidos
pares=[("Aire", "Grasa"), ("Grasa","Musculo"), ("Musculo", "Hueso")]
reflexion=[
    coeficiente_reflexion(impedancia[tejidos.index(par[0])],impedancia[tejidos.index(par[1])])
    for par in pares
]

#Grafica
plt.subplot(1,2,1)
plt.bar(tejidos, impedancia, color="pink")
plt.title("Impedancia Acustica de los Tejidos")
plt.xlabel("Impedancia")
plt.ylabel("Tejidos")

#coeficiente de reflexion
plt.subplot(1,2,2)
pares_etiquetas=[f"{par[0]} - {par[1]}" for par in pares]
plt.bar(pares_etiquetas, reflexion, color= "skyblue")
plt.xlabel("Coeficiente de reflexion")
plt.ylabel("Reflexion")
plt.title("Coeficiente de reflexion")
plt.ylim=(0,1)
plt.show()